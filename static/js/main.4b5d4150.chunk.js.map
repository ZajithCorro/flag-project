{"version":3,"sources":["Context/CountryContext.jsx","Components/Wrapper.jsx","Components/Country.jsx","Components/CountryList.jsx","Components/Search.jsx","Components/Filters.jsx","Pages/Home.jsx","Components/BorderCountries.jsx","Components/CountryDescription.jsx","Pages/Country.jsx","Root.jsx","Components/Header.jsx","App.js","serviceWorker.js","index.js"],"names":["CountryContext","createContext","Provider","initialState","countryList","countryListByName","inputSearch","CountryProvider","children","useState","state","setState","value","setCountryList","setCountryByName","countryName","filter","country","name","toLowerCase","includes","WrapperStyled","styled","div","Wrapper","CountryStyled","article","Details","Country","flag","capital","population","region","alpha3Code","history","useHistory","onClick","push","loading","src","alt","Intl","NumberFormat","format","CountryListStyled","CountryList","useContext","length","useEffect","fetch","then","response","json","data","catch","error","console","log","map","numericCode","key","SearchStyled","InputStyled","label","Search","setValue","className","type","onChange","event","target","trim","Filters","Home","BorderCountriesStyled","BorderCountries","countries","countryCode","CountryDescriptionStyled","CountryDescription","nativeName","area","subregion","currencies","borders","topLevelDomain","item","symbol","Back","button","id","useParams","contextCountry","find","setCountry","a","window","scrollTo","fetchCountry","Root","path","component","HeaderStyled","Header","setDarkMode","darkMode","to","App","mainClass","mq","matchMedia","addListener","matches","removeListener","basename","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.4b5d4150.chunk.js","sourcesContent":["import React, { useState, createContext } from 'react';\n\nconst CountryContext = createContext();\nconst { Provider } = CountryContext;\n\nconst initialState = {\n\tcountryList: [],\n\tcountryListByName: [],\n\tinputSearch: '',\n};\n\nfunction CountryProvider({ children }) {\n\tconst [state, setState] = useState(initialState);\n\n\tfunction setCountryByName(countryName) {\n\t\tconst { countryList } = state;\n\n\t\tconst countryListByName = countryList.filter((country) =>\n\t\t\tcountry.name.toLowerCase().includes(countryName.toLowerCase())\n\t\t);\n\n\t\tsetState({ ...state, countryListByName, inputSearch: countryName });\n\t}\n\n\tfunction setCountryList(countryList) {\n\t\tsetState({ ...state, countryList });\n\t}\n\n\treturn (\n\t\t<Provider value={{ state, setCountryList, setCountryByName }}>\n\t\t\t{children}\n\t\t</Provider>\n\t);\n}\n\nexport { CountryContext, CountryProvider };\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst WrapperStyled = styled.div`\n\tmax-width: 1312px;\n\tmargin: auto;\n\tpadding: 0 1rem;\n`;\n\nexport default function Wrapper({ children }) {\n\treturn <WrapperStyled>{children}</WrapperStyled>;\n}\n","import React from 'react';\nimport { useHistory } from 'react-router-dom';\nimport styled from 'styled-components';\n\nconst CountryStyled = styled.article`\n  cursor: pointer;\n  border-radius: 5px;\n  overflow: hidden;\n  box-shadow: 0 0 7px 2px rgba(0, 0, 0, 0.03);\n  background-color: var(--secondary);\n  transition: all 0.3s ease;\n\n  &:hover {\n    transform: translatey(-0.2rem);\n  }\n\n  img {\n    width: 100%;\n    height: 160px;\n    object-fit: cover;\n    vertical-align: top;\n  }\n`;\n\nconst Details = styled.div`\n  padding: 1.5em;\n\n  h2 {\n    margin: 0;\n    margin-bottom: 1rem;\n    font-size: 18px;\n    font-weight: 700;\n  }\n\n  p {\n    font-size: 0.9em;\n    margin-bottom: 0.5rem;\n  }\n`;\n\nexport default function Country({\n  name,\n  flag,\n  capital,\n  population,\n  region,\n  alpha3Code,\n}) {\n  const history = useHistory();\n\n  function goToCountry() {\n    history.push(`/country/${alpha3Code}`);\n  }\n\n  return (\n    <CountryStyled onClick={goToCountry}>\n      <img loading='lazy' src={flag} alt='Flag country' />\n      <Details>\n        <h2>{name}</h2>\n        <p>\n          <strong>Population: </strong>\n          {new Intl.NumberFormat().format(population)}\n        </p>\n        <p>\n          <strong>Capital: </strong>\n          {capital}\n        </p>\n        <p>\n          <strong>Region: </strong>\n          {region}\n        </p>\n      </Details>\n    </CountryStyled>\n  );\n}\n","import React, { useContext, useEffect } from 'react';\nimport { CountryContext } from '../Context/CountryContext';\nimport styled from 'styled-components';\n\nimport Wrapper from './Wrapper';\nimport Country from './Country';\n\nconst CountryListStyled = styled.div`\n\tdisplay: grid;\n\tgrid-gap: 2.3em 4em;\n\tgrid-auto-flow: columns;\n\tgrid-template-columns: repeat(auto-fill, 270px);\n\tjustify-content: center;\n\tpadding-bottom: 3em;\n`;\n\nexport default function CountryList() {\n\tconst { state, setCountryList } = useContext(CountryContext);\n\n\tconst countryList =\n\t\tstate.countryListByName.length > 0\n\t\t\t? state.countryListByName\n\t\t\t: state.countryList;\n\n\tuseEffect(() => {\n\t\tconst fetchCountries = () => {\n\t\t\tfetch('https://restcountries.eu/rest/v2/all')\n\t\t\t\t.then((response) => response.json())\n\t\t\t\t.then((data) => {\n\t\t\t\t\tsetCountryList(data);\n\t\t\t\t})\n\t\t\t\t.catch((error) => {\n\t\t\t\t\tconsole.log(error);\n\t\t\t\t});\n\t\t};\n\n\t\tfetchCountries();\n\t}, []);\n\n\treturn (\n\t\t<Wrapper>\n\t\t\t<CountryListStyled>\n\t\t\t\t{countryList.map(\n\t\t\t\t\t({\n\t\t\t\t\t\tname,\n\t\t\t\t\t\tflag,\n\t\t\t\t\t\tcapital,\n\t\t\t\t\t\tpopulation,\n\t\t\t\t\t\tnumericCode,\n\t\t\t\t\t\talpha3Code,\n\t\t\t\t\t\tregion,\n\t\t\t\t\t}) => {\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<Country\n\t\t\t\t\t\t\t\tkey={numericCode}\n\t\t\t\t\t\t\t\tname={name}\n\t\t\t\t\t\t\t\tflag={flag}\n\t\t\t\t\t\t\t\tcapital={capital}\n\t\t\t\t\t\t\t\tpopulation={population}\n\t\t\t\t\t\t\t\tregion={region}\n\t\t\t\t\t\t\t\talpha3Code={alpha3Code}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t)}\n\t\t\t</CountryListStyled>\n\t\t</Wrapper>\n\t);\n}\n","import React, { useContext } from 'react';\nimport styled from 'styled-components';\nimport { CountryContext } from '../Context/CountryContext';\nimport { useState } from 'react';\n\nconst SearchStyled = styled.div`\n\tdisplay: flex;\n\tposition: relative;\n\twidth: 90%;\n\tmargin: 0 auto;\n\tmargin-bottom: 1.5em;\n\n\t.close {\n\t\tposition: absolute;\n\t\tright: 1em;\n\t\ttop: 1em;\n\t\tborder-radius: 50%;\n\t\tborder: none;\n\t\tbox-shadow: 0 2px 9px 0 rgba(0, 0, 0, 0.05);\n\t}\n\n\t@media screen and (min-width: 768px) {\n\t\twidth: 50%;\n\t}\n`;\n\nconst InputStyled = styled.label`\n\tdisplay: inline-flex;\n\tbackground: var(--secondary);\n\talign-items: center;\n\tbox-shadow: 0 2px 9px 0 rgba(0, 0, 0, 0.05);\n\tpadding: 0 2rem;\n\tborder-radius: 5px;\n\tflex: 1;\n\ti {\n\t\tmargin-right: 1em;\n\t\tcolor: #c4c4c4;\n\t}\n\tinput {\n\t\tflex: 1;\n\t\tborder: none;\n\t\theight: 48px;\n\t\tline-height: 48px;\n\t\tfont-size: 0.7em;\n\t\toutline: 0;\n\t\tcolor: var(--primary);\n\t\tbackground: var(--secondary);\n\t\t&::-webkit-input-placeholder {\n\t\t\tcolor: #c4c4c4;\n\t\t}\n\t}\n`;\n\nexport default function Search() {\n\tconst { state, setCountryByName } = useContext(CountryContext);\n\tconst [value, setValue] = useState(state.inputSearch);\n\n\tfunction handleChange(event) {\n\t\tconst country = event.target.value.trim();\n\t\tsetValue(country);\n\t\tsetCountryByName(event.target.value);\n\t}\n\n\treturn (\n\t\t<SearchStyled>\n\t\t\t<InputStyled>\n\t\t\t\t<i className='fas fa-search'></i>\n\t\t\t\t<input type='text' value={value} onChange={handleChange} />\n\t\t\t</InputStyled>\n\t\t</SearchStyled>\n\t);\n}\n","import React from 'react';\nimport Search from './Search';\nimport Wrapper from './Wrapper';\n\nexport default function Filters() {\n\treturn (\n\t\t<Wrapper>\n\t\t\t<Search />\n\t\t</Wrapper>\n\t);\n}\n","import React from 'react';\nimport CountryList from '../Components/CountryList';\nimport Filters from '../Components/Filters';\n\nexport default function Home() {\n\treturn (\n\t\t<>\n\t\t\t<Filters />\n\t\t\t<CountryList />\n\t\t</>\n\t);\n}\n","import React from 'react';\nimport styled from 'styled-components';\nimport { useHistory } from 'react-router-dom';\n\nconst BorderCountriesStyled = styled.div`\n\ttext-align: center;\n\tmargin-top: 1.5em;\n\n\t.list-countries {\n\t\tmargin-top: 1em;\n\t}\n\t.country {\n\t\tcursor: pointer;\n\t\tpadding: 0.5em 2em;\n\t\tmargin: 0 15px 15px 0;\n\t\tborder-radius: 5px;\n\t\tbox-shadow: 0 0 5px rgba(0, 0, 0, 0.3);\n\t\tbackground: var(--secondary);\n\t\tdisplay: inline-flex;\n\t\ttransition: all 0.3s ease;\n\n\t\t&:hover {\n\t\t\ttransform: translatey(-0.2rem);\n\t\t}\n\t}\n\n\t@media screen and (min-width: 900px) {\n\t\ttext-align: left;\n\t}\n`;\n\nexport default function BorderCountries({ countries }) {\n\tconst history = useHistory();\n\n\tfunction goTo(countryCode) {\n\t\thistory.push(`/country/${countryCode}`);\n\t}\n\n\treturn (\n\t\t<BorderCountriesStyled>\n\t\t\t<section>\n\t\t\t\t<div>\n\t\t\t\t\t<strong>Border Countries:</strong>\n\t\t\t\t</div>\n\t\t\t\t<div className='list-countries'>\n\t\t\t\t\t{countries.map((country) => (\n\t\t\t\t\t\t<span\n\t\t\t\t\t\t\tclassName='country'\n\t\t\t\t\t\t\tkey={country}\n\t\t\t\t\t\t\tonClick={() => goTo(country)}>\n\t\t\t\t\t\t\t{country}\n\t\t\t\t\t\t</span>\n\t\t\t\t\t))}\n\t\t\t\t</div>\n\t\t\t</section>\n\t\t</BorderCountriesStyled>\n\t);\n}\n","import React from 'react';\nimport styled from 'styled-components';\n\nimport BorderCountries from './BorderCountries';\n\nconst CountryDescriptionStyled = styled.div`\n  margin-top: 3em;\n  padding-bottom: 3em;\n  text-align: center;\n\n  img {\n    width: 100%;\n    margin-bottom: 2em;\n  }\n\n  .details {\n    h2 {\n      margin-bottom: 2em;\n    }\n\n    p {\n      margin-bottom: 1em;\n    }\n  }\n\n  .grid {\n    display: grid;\n    gap: 10px 0;\n  }\n\n  @media screen and (min-width: 900px) {\n    display: grid;\n    grid-template-columns: 1fr 1fr;\n    grid-column-gap: 120px;\n    margin-top: 5em;\n    text-align: left;\n\n    .grid {\n      grid-template-columns: 50% 50%;\n      gap: 0 10px;\n    }\n  }\n`;\n\nexport default function CountryDescription({\n  flag,\n  name,\n  nativeName,\n  population,\n  area,\n  region,\n  subregion,\n  capital,\n  currencies = [],\n  borders = [],\n  topLevelDomain,\n}) {\n  return (\n    <CountryDescriptionStyled>\n      <img src={flag} alt='Bandera' />\n      <div className='details'>\n        <h2>{name}</h2>\n        <div className='grid'>\n          <section>\n            <p>\n              <strong>Native name: </strong>\n              {nativeName}\n            </p>\n            <p>\n              <strong>Capital: </strong>\n              {capital}\n            </p>\n            <p>\n              <strong>Area: </strong>\n              {new Intl.NumberFormat().format(area)} Km<sup>2</sup>\n            </p>\n            <p>\n              <strong>Region: </strong>\n              {region}\n            </p>\n            <p>\n              <strong>Sub Region: </strong>\n              {subregion}\n            </p>\n          </section>\n          <section>\n            <p>\n              <strong>Population: </strong>\n              {new Intl.NumberFormat().format(population)}\n            </p>\n            <p>\n              <strong>Domain: </strong>\n              {topLevelDomain}\n            </p>\n            <p>\n              <strong>Currencies: </strong>\n              {currencies.map((item) => (\n                <span key={item.name}>\n                  {item.name} - {item.symbol}\n                </span>\n              ))}\n            </p>\n          </section>\n        </div>\n\n        {borders.length > 0 ? <BorderCountries countries={borders} /> : ''}\n      </div>\n    </CountryDescriptionStyled>\n  );\n}\n","import React, { useContext, useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { useParams, useHistory } from 'react-router-dom';\nimport { CountryContext } from '../Context/CountryContext';\n\nimport CountryDescription from '../Components/CountryDescription';\nimport Wrapper from '../Components/Wrapper';\n\nconst Back = styled.button`\n  background-color: var(--secondary);\n  box-shadow: 0 0 5px rgba(0, 0, 0, 0.3);\n  padding: 0.7em 2.2em;\n  border-radius: 5px;\n  border: none;\n  cursor: pointer;\n  color: var(--primary);\n\n  i {\n    margin-right: 5px;\n  }\n`;\n\nexport default function Country() {\n  const { id } = useParams();\n  const history = useHistory();\n  const { state } = useContext(CountryContext);\n\n  const contextCountry = state.countryList.find(\n    (item) => item.alpha3Code === id\n  );\n\n  const [country, setCountry] = useState(contextCountry);\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n\n    async function fetchCountry() {\n      const response = await fetch(\n        `https://restcountries.eu/rest/v2/alpha/${id}`\n      );\n      const data = await response.json();\n      setCountry(data);\n    }\n\n    if (contextCountry) {\n      setCountry(contextCountry);\n    } else {\n      fetchCountry();\n    }\n  }, [id]);\n\n  return (\n    <Wrapper>\n      <Back onClick={() => history.push('/')}>\n        <i className='fas fa-long-arrow-alt-left'></i> Back\n      </Back>\n      <CountryDescription {...country} />\n    </Wrapper>\n  );\n}\n","import React from 'react';\nimport { Switch, Route } from 'react-router-dom';\n\nimport Home from './Pages/Home';\nimport Country from './Pages/Country';\n\nexport default function Root() {\n\treturn (\n\t\t<Switch>\n\t\t\t<Route path='/country/:id' component={Country} />\n\t\t\t<Route path='/' component={Home} />\n\t\t</Switch>\n\t);\n}\n","import React from 'react';\nimport styled from 'styled-components';\nimport { Link } from 'react-router-dom';\nimport Wrapper from './Wrapper';\n\nconst HeaderStyled = styled.div`\n\tbackground: var(--secondary);\n\tmargin-bottom: 1em;\n\tbox-shadow: 0 2px 4px 0 rgba(0, 0, 0, 0.06);\n\tmargin-bottom: 3em;\n\n\theader {\n\t\theight: 80px;\n\t\tdisplay: flex;\n\t\tjustify-content: space-between;\n\t\talign-items: center;\n\n\t\th1 {\n\t\t\tfont-size: 14px;\n\t\t}\n\n\t\ta {\n\t\t\ttext-decoration: none;\n\t\t\tcolor: var(--dark);\n\t\t}\n\n\t\t.dark-mode {\n\t\t\tcursor: pointer;\n\t\t\tfont-size: 12px;\n\t\t\tfont-weight: 600;\n\n\t\t\ti {\n\t\t\t\ttransform: rotate(-20deg);\n\t\t\t\tmargin-right: 10px;\n\t\t\t}\n\t\t}\n\t}\n\n\t@media screen and (min-width: 768px) {\n\t\theader {\n\t\t\th1 {\n\t\t\t\tfont-size: 24px;\n\t\t\t}\n\n\t\t\t.dark-mode {\n\t\t\t\tfont-size: 1em;\n\t\t\t}\n\t\t}\n\t}\n`;\n\nexport default function Header({ setDarkMode, darkMode }) {\n\tfunction handleDarkMode() {\n\t\tsetDarkMode(!darkMode);\n\t}\n\n\treturn (\n\t\t<HeaderStyled>\n\t\t\t<Wrapper>\n\t\t\t\t{darkMode}\n\t\t\t\t<header>\n\t\t\t\t\t<Link to='/'>\n\t\t\t\t\t\t<h1>Where in the world?</h1>\n\t\t\t\t\t</Link>\n\t\t\t\t\t<div className='dark-mode' onClick={handleDarkMode}>\n\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t<i className='far fa-moon'></i> Dark Mode\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</div>\n\t\t\t\t</header>\n\t\t\t</Wrapper>\n\t\t</HeaderStyled>\n\t);\n}\n","import React, { useState, useEffect } from 'react';\nimport { HashRouter as Router } from 'react-router-dom';\nimport { CountryProvider } from './Context/CountryContext';\nimport Root from './Root';\nimport Header from './Components/Header';\nimport './App.css';\n\nexport default function App() {\n\tconst [darkMode, setDarkMode] = useState(false);\n\tconst mainClass = darkMode ? 'is-dark-mode' : 'is-light-mode';\n\n\tuseEffect(() => {\n\t\tconst mq = window.matchMedia('(prefers-color-scheme: dark)');\n\t\tmq.addListener(() => setDarkMode(mq.matches));\n\t\tsetDarkMode(mq.matches);\n\t\treturn () => {\n\t\t\tmq.removeListener();\n\t\t};\n\t}, []);\n\n\treturn (\n\t\t<main className={mainClass}>\n\t\t\t<CountryProvider>\n\t\t\t\t<Router basename='/flag-project'>\n\t\t\t\t\t<Header setDarkMode={setDarkMode} darkMode={darkMode} />\n\t\t\t\t\t<Root />\n\t\t\t\t</Router>\n\t\t\t</CountryProvider>\n\t\t</main>\n\t);\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}